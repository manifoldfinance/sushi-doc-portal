"use strict";(self.webpackChunk_sushiswap_kitchen_docs=self.webpackChunk_sushiswap_kitchen_docs||[]).push([[4602],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>m});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),d=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},s=function(e){var r=d(e.components);return n.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=d(t),m=o,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||i;return t?n.createElement(f,c(c({ref:r},s),{},{components:t})):n.createElement(f,c({ref:r},s))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,c=new Array(i);c[0]=u;var a={};for(var l in r)hasOwnProperty.call(r,l)&&(a[l]=r[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var d=2;d<i;d++)c[d]=t[d];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},96780:(e,r,t)=>{t.r(r),t.d(r,{frontMatter:()=>i,contentTitle:()=>c,metadata:()=>a,toc:()=>l,default:()=>s});var n=t(87462),o=(t(67294),t(3905));const i={sidebar_position:7},c="Nonce",a={unversionedId:"limit-order-protocol/guide/nonce",id:"limit-order-protocol/guide/nonce",isDocsHomePage:!1,title:"Nonce",description:"LimitOrderProtocolFacade.nonce() - returns the nonce of the current wallet address",source:"@site/docs/limit-order-protocol/guide/nonce.md",sourceDirName:"limit-order-protocol/guide",slug:"/limit-order-protocol/guide/nonce",permalink:"/docs/limit-order-protocol/guide/nonce",editUrl:"https://github.com/manifoldfinance/sushi-docs/edit/master/docs/limit-order-protocol/guide/nonce.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Cancel all limit orders",permalink:"/docs/limit-order-protocol/guide/cancel-all-limit-orders"},next:{title:"Predicate",permalink:"/docs/limit-order-protocol/guide/predicate"}},l=[{value:"Example:",id:"example",children:[]}],d={toc:l};function s(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"nonce"},"Nonce"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"LimitOrderProtocolFacade.nonce()")," - returns the nonce of the current wallet address",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"LimitOrderProtocolFacade.advanceNonce(count: number)")," - increases the nonce by the count",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"LimitOrderProtocolFacade.increaseNonce()")," - increases the nonce by 1"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Nonce")," - this is the so-called ",(0,o.kt)("inlineCode",{parentName:"p"},"series")," of limit orders.",(0,o.kt)("br",{parentName:"p"}),"\n","The nonce is useful when you need to create a bunch of limit orders with the ability to cancel them all later."),(0,o.kt)("h2",{id:"example"},"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import Web3 from 'web3';\nimport {\n    LimitOrderProtocolFacade,\n    LimitOrderPredicateBuilder,\n    Web3ProviderConnector\n} from '@1inch/limit-order-protocol';\n\nconst walletAddress = '0xhhh...';\nconst contractAddress = '0x5fa31604fc5dcebfcac2481f9fa59d174126e5e6';\nconst chainId = 1;\n\nconst connector = new Web3ProviderConnector(new Web3('...'));\nconst limitOrderProtocolFacade = new LimitOrderProtocolFacade(contractAddress, connector);\nconst limitOrderPredicateBuilder = new LimitOrderPredicateBuilder(\n    limitOrderProtocolFacade\n);\nconst limitOrderBuilder = new LimitOrderBuilder(\n    contractAddress,\n    chainId,\n    connector\n);\n\n// Get the current nonce\nconst nonce = await limitOrderProtocolFacade.nonce(contractAddress);\n\n// Create a limit order with nonceEquals predicate\nconst predicate = limitOrderPredicateBuilder.nonceEquals(walletAddress, nonce);\nconst limitOrder = limitOrderBuilder.buildLimitOrder({\n    ...,\n    predicate\n});\n\n// Cancel all orders by advance nonce\nconst cancelAllOrdersCallData = limitOrderProtocolFacade.advanceNonce();\nsendTransaction({\n    from: walletAddress,\n    gas: 210_000, // Set your gas limit\n    gasPrice: 40000, // Set your gas price\n    to: contractAddress,\n    data: cancelAllOrdersCallData,\n});\n")))}s.isMDXComponent=!0}}]);