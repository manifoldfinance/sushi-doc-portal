"use strict";(self.webpackChunk_sushiswap_kitchen_docs=self.webpackChunk_sushiswap_kitchen_docs||[]).push([[4960],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=u(r),f=o,m=l["".concat(c,".").concat(f)]||l[f]||d[f]||a;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=l;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}l.displayName="MDXCreateElement"},5679:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const a={},i=void 0,s={unversionedId:"bentobox/bentobox/ISwapper",id:"bentobox/bentobox/ISwapper",title:"ISwapper",description:"ISwapper",source:"@site/docs/bentobox/bentobox/ISwapper.md",sourceDirName:"bentobox/bentobox",slug:"/bentobox/bentobox/ISwapper",permalink:"/docs/bentobox/bentobox/ISwapper",editUrl:"https://github.com/manifoldfinance/sushi-doc-portal/edit/master/docs/bentobox/bentobox/ISwapper.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IStrategy",permalink:"/docs/bentobox/bentobox/IStrategy"},next:{title:"IWETH",permalink:"/docs/bentobox/bentobox/IWETH"}},c={},u=[{value:"<code>ISwapper</code>",id:"iswapper",level:2},{value:"<code>swap(contract IERC20 fromToken, contract IERC20 toToken, address recipient, uint256 shareToMin, uint256 shareFrom) \u2192 uint256 extraShare, uint256 shareReturned</code> (external)",id:"swapcontract-ierc20-fromtoken-contract-ierc20-totoken-address-recipient-uint256-sharetomin-uint256-sharefrom--uint256-extrashare-uint256-sharereturned-external",level:3},{value:"<code>swapExact(contract IERC20 fromToken, contract IERC20 toToken, address recipient, address refundTo, uint256 shareFromSupplied, uint256 shareToExact) \u2192 uint256 shareUsed, uint256 shareReturned</code> (external)",id:"swapexactcontract-ierc20-fromtoken-contract-ierc20-totoken-address-recipient-address-refundto-uint256-sharefromsupplied-uint256-sharetoexact--uint256-shareused-uint256-sharereturned-external",level:3}],p={toc:u};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"iswapper"},(0,o.kt)("inlineCode",{parentName:"h2"},"ISwapper")),(0,o.kt)("h3",{id:"swapcontract-ierc20-fromtoken-contract-ierc20-totoken-address-recipient-uint256-sharetomin-uint256-sharefrom--uint256-extrashare-uint256-sharereturned-external"},(0,o.kt)("inlineCode",{parentName:"h3"},"swap(contract IERC20 fromToken, contract IERC20 toToken, address recipient, uint256 shareToMin, uint256 shareFrom) \u2192 uint256 extraShare, uint256 shareReturned")," (external)"),(0,o.kt)("p",null,"Withdraws 'amountFrom' of token 'from' from the BentoBox account for this\nswapper. Swaps it for at least 'amountToMin' of token 'to'. Transfers the\nswapped tokens of 'to' into the BentoBox using a plain ERC20 transfer. Returns\nthe amount of tokens 'to' transferred to BentoBox. (The BentoBox skim function\nwill be used by the caller to get the swapped funds)."),(0,o.kt)("h3",{id:"swapexactcontract-ierc20-fromtoken-contract-ierc20-totoken-address-recipient-address-refundto-uint256-sharefromsupplied-uint256-sharetoexact--uint256-shareused-uint256-sharereturned-external"},(0,o.kt)("inlineCode",{parentName:"h3"},"swapExact(contract IERC20 fromToken, contract IERC20 toToken, address recipient, address refundTo, uint256 shareFromSupplied, uint256 shareToExact) \u2192 uint256 shareUsed, uint256 shareReturned")," (external)"),(0,o.kt)("p",null,"Calculates the amount of token 'from' needed to complete the swap (amountFrom),\nthis should be less than or equal to amountFromMax. Withdraws 'amountFrom' of\ntoken 'from' from the BentoBox account for this swapper. Swaps it for exactly\n'exactAmountTo' of token 'to'. Transfers the swapped tokens of 'to' into the\nBentoBox using a plain ERC20 transfer. Transfers allocated, but unused 'from'\ntokens within the BentoBox to 'refundTo' (amountFromMax - amountFrom). Returns\nthe amount of 'from' tokens withdrawn from BentoBox (amountFrom). (The BentoBox\nskim function will be used by the caller to get the swapped funds)."))}d.isMDXComponent=!0}}]);