"use strict";(self.webpackChunk_sushiswap_kitchen_docs=self.webpackChunk_sushiswap_kitchen_docs||[]).push([[2771],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),p=s(n),m=i,h=p["".concat(l,".").concat(m)]||p[m]||c[m]||o;return n?a.createElement(h,r(r({ref:t},u),{},{components:n})):a.createElement(h,r({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=p;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d.mdxType="string"==typeof e?e:i,r[1]=d;for(var s=2;s<o;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6492:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>o,contentTitle:()=>r,metadata:()=>d,toc:()=>l,default:()=>u});var a=n(7462),i=(n(7294),n(3905));const o={},r=void 0,d={unversionedId:"bentobox/bentobox/KashiPairMediumRiskV1",id:"bentobox/bentobox/KashiPairMediumRiskV1",isDocsHomePage:!1,title:"KashiPairMediumRiskV1",description:"KashiPairMediumRiskV1",source:"@site/docs/bentobox/bentobox/KashiPairMediumRiskV1.md",sourceDirName:"bentobox/bentobox",slug:"/bentobox/bentobox/KashiPairMediumRiskV1",permalink:"/docs/bentobox/bentobox/KashiPairMediumRiskV1",editUrl:"https://github.com/manifoldfinance/sushi-doc-portal/edit/master/docs/bentobox/bentobox/KashiPairMediumRiskV1.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IWETH",permalink:"/docs/bentobox/bentobox/IWETH"},next:{title:"MasterContractManager",permalink:"/docs/bentobox/bentobox/MasterContractManager"}},l=[{value:"<code>KashiPairMediumRiskV1</code>",id:"kashipairmediumriskv1",children:[{value:"<code>solvent()</code>",id:"solvent",children:[]},{value:"<code>symbol() \u2192 string</code> (external)",id:"symbol--string-external",children:[]},{value:"<code>name() \u2192 string</code> (external)",id:"name--string-external",children:[]},{value:"<code>decimals() \u2192 uint8</code> (external)",id:"decimals--uint8-external",children:[]},{value:"<code>totalSupply() \u2192 uint256</code> (public)",id:"totalsupply--uint256-public",children:[]},{value:"<code>constructor(contract IBentoBoxV1 bentoBox_)</code> (public)",id:"constructorcontract-ibentoboxv1-bentobox_-public",children:[]},{value:"<code>init(bytes data)</code> (public)",id:"initbytes-data-public",children:[]},{value:"<code>accrue()</code> (public)",id:"accrue-public",children:[]},{value:"<code>_isSolvent(address user, bool open, uint256 _exchangeRate) \u2192 bool</code> (internal)",id:"_issolventaddress-user-bool-open-uint256-_exchangerate--bool-internal",children:[]},{value:"<code>updateExchangeRate() \u2192 bool updated, uint256 rate</code> (public)",id:"updateexchangerate--bool-updated-uint256-rate-public",children:[]},{value:"<code>_addTokens(contract IERC20 token, uint256 share, uint256 total, bool skim)</code> (internal)",id:"_addtokenscontract-ierc20-token-uint256-share-uint256-total-bool-skim-internal",children:[]},{value:"<code>addCollateral(address to, bool skim, uint256 share)</code> (public)",id:"addcollateraladdress-to-bool-skim-uint256-share-public",children:[]},{value:"<code>_removeCollateral(address to, uint256 share)</code> (internal)",id:"_removecollateraladdress-to-uint256-share-internal",children:[]},{value:"<code>removeCollateral(address to, uint256 share)</code> (public)",id:"removecollateraladdress-to-uint256-share-public",children:[]},{value:"<code>_addAsset(address to, bool skim, uint256 share) \u2192 uint256 fraction</code> (internal)",id:"_addassetaddress-to-bool-skim-uint256-share--uint256-fraction-internal",children:[]},{value:"<code>addAsset(address to, bool skim, uint256 share) \u2192 uint256 fraction</code> (public)",id:"addassetaddress-to-bool-skim-uint256-share--uint256-fraction-public",children:[]},{value:"<code>_removeAsset(address to, uint256 fraction) \u2192 uint256 share</code> (internal)",id:"_removeassetaddress-to-uint256-fraction--uint256-share-internal",children:[]},{value:"<code>removeAsset(address to, uint256 fraction) \u2192 uint256 share</code> (public)",id:"removeassetaddress-to-uint256-fraction--uint256-share-public",children:[]},{value:"<code>_borrow(address to, uint256 amount) \u2192 uint256 part, uint256 share</code> (internal)",id:"_borrowaddress-to-uint256-amount--uint256-part-uint256-share-internal",children:[]},{value:"<code>borrow(address to, uint256 amount) \u2192 uint256 part, uint256 share</code> (public)",id:"borrowaddress-to-uint256-amount--uint256-part-uint256-share-public",children:[]},{value:"<code>_repay(address to, bool skim, uint256 part) \u2192 uint256 amount</code> (internal)",id:"_repayaddress-to-bool-skim-uint256-part--uint256-amount-internal",children:[]},{value:"<code>repay(address to, bool skim, uint256 part) \u2192 uint256 amount</code> (public)",id:"repayaddress-to-bool-skim-uint256-part--uint256-amount-public",children:[]},{value:"<code>_num(int256 inNum, uint256 value1, uint256 value2) \u2192 uint256 outNum</code> (internal)",id:"_numint256-innum-uint256-value1-uint256-value2--uint256-outnum-internal",children:[]},{value:"<code>_bentoDeposit(bytes data, uint256 value, uint256 value1, uint256 value2) \u2192 uint256, uint256</code> (internal)",id:"_bentodepositbytes-data-uint256-value-uint256-value1-uint256-value2--uint256-uint256-internal",children:[]},{value:"<code>_bentoWithdraw(bytes data, uint256 value1, uint256 value2) \u2192 uint256, uint256</code> (internal)",id:"_bentowithdrawbytes-data-uint256-value1-uint256-value2--uint256-uint256-internal",children:[]},{value:"<code>_call(uint256 value, bytes data, uint256 value1, uint256 value2) \u2192 bytes, uint8</code> (internal)",id:"_calluint256-value-bytes-data-uint256-value1-uint256-value2--bytes-uint8-internal",children:[]},{value:"<code>cook(uint8[] actions, uint256[] values, bytes[] datas) \u2192 uint256 value1, uint256 value2</code> (external)",id:"cookuint8-actions-uint256-values-bytes-datas--uint256-value1-uint256-value2-external",children:[]},{value:"<code>liquidate(address[] users, uint256[] maxBorrowParts, address to, contract ISwapper swapper, bool open)</code> (public)",id:"liquidateaddress-users-uint256-maxborrowparts-address-to-contract-iswapper-swapper-bool-open-public",children:[]},{value:"<code>withdrawFees()</code> (public)",id:"withdrawfees-public",children:[]},{value:"<code>setSwapper(contract ISwapper swapper, bool enable)</code> (public)",id:"setswappercontract-iswapper-swapper-bool-enable-public",children:[]},{value:"<code>setFeeTo(address newFeeTo)</code> (public)",id:"setfeetoaddress-newfeeto-public",children:[]},{value:"<code>LogExchangeRate(uint256 rate)</code>",id:"logexchangerateuint256-rate",children:[]},{value:"<code>LogAccrue(uint256 accruedAmount, uint256 feeFraction, uint64 rate, uint256 utilization)</code>",id:"logaccrueuint256-accruedamount-uint256-feefraction-uint64-rate-uint256-utilization",children:[]},{value:"<code>LogAddCollateral(address from, address to, uint256 share)</code>",id:"logaddcollateraladdress-from-address-to-uint256-share",children:[]},{value:"<code>LogAddAsset(address from, address to, uint256 share, uint256 fraction)</code>",id:"logaddassetaddress-from-address-to-uint256-share-uint256-fraction",children:[]},{value:"<code>LogRemoveCollateral(address from, address to, uint256 share)</code>",id:"logremovecollateraladdress-from-address-to-uint256-share",children:[]},{value:"<code>LogRemoveAsset(address from, address to, uint256 share, uint256 fraction)</code>",id:"logremoveassetaddress-from-address-to-uint256-share-uint256-fraction",children:[]},{value:"<code>LogBorrow(address from, address to, uint256 amount, uint256 feeAmount, uint256 part)</code>",id:"logborrowaddress-from-address-to-uint256-amount-uint256-feeamount-uint256-part",children:[]},{value:"<code>LogRepay(address from, address to, uint256 amount, uint256 part)</code>",id:"logrepayaddress-from-address-to-uint256-amount-uint256-part",children:[]},{value:"<code>LogFeeTo(address newFeeTo)</code>",id:"logfeetoaddress-newfeeto",children:[]},{value:"<code>LogWithdrawFees(address feeTo, uint256 feesEarnedFraction)</code>",id:"logwithdrawfeesaddress-feeto-uint256-feesearnedfraction",children:[]},{value:"<code>AccrueInfo</code>",id:"accrueinfo",children:[]},{value:"<code>CookStatus</code>",id:"cookstatus",children:[]}]}],s={toc:l};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"kashipairmediumriskv1"},(0,i.kt)("inlineCode",{parentName:"h2"},"KashiPairMediumRiskV1")),(0,i.kt)("p",null,"This contract allows contract calls to any contract (except BentoBox)\nfrom arbitrary callers thus, don't trust calls from this contract in any circumstances."),(0,i.kt)("h3",{id:"solvent"},(0,i.kt)("inlineCode",{parentName:"h3"},"solvent()")),(0,i.kt)("p",null,"Checks if the user is solvent in the closed liquidation case at the end of the function body."),(0,i.kt)("h3",{id:"symbol--string-external"},(0,i.kt)("inlineCode",{parentName:"h3"},"symbol() \u2192 string")," (external)"),(0,i.kt)("h3",{id:"name--string-external"},(0,i.kt)("inlineCode",{parentName:"h3"},"name() \u2192 string")," (external)"),(0,i.kt)("h3",{id:"decimals--uint8-external"},(0,i.kt)("inlineCode",{parentName:"h3"},"decimals() \u2192 uint8")," (external)"),(0,i.kt)("h3",{id:"totalsupply--uint256-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"totalSupply() \u2192 uint256")," (public)"),(0,i.kt)("h3",{id:"constructorcontract-ibentoboxv1-bentobox_-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"constructor(contract IBentoBoxV1 bentoBox_)")," (public)"),(0,i.kt)("p",null,"The constructor is only used for the initial master contract. Subsequent clones are initialised via ",(0,i.kt)("inlineCode",{parentName:"p"},"init"),"."),(0,i.kt)("h3",{id:"initbytes-data-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"init(bytes data)")," (public)"),(0,i.kt)("p",null,"Serves as the constructor for clones, as clones can't have a regular constructor"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"data")," is abi encoded in the format: (IERC20 collateral, IERC20 asset, IOracle oracle, bytes oracleData)"),(0,i.kt)("h3",{id:"accrue-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"accrue()")," (public)"),(0,i.kt)("p",null,"Accrues the interest on the borrowed tokens and handles the accumulation of fees."),(0,i.kt)("h3",{id:"_issolventaddress-user-bool-open-uint256-_exchangerate--bool-internal"},(0,i.kt)("inlineCode",{parentName:"h3"},"_isSolvent(address user, bool open, uint256 _exchangeRate) \u2192 bool")," (internal)"),(0,i.kt)("p",null,"Concrete implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"isSolvent"),". Includes a third parameter to allow caching ",(0,i.kt)("inlineCode",{parentName:"p"},"exchangeRate"),"."),(0,i.kt)("h3",{id:"updateexchangerate--bool-updated-uint256-rate-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"updateExchangeRate() \u2192 bool updated, uint256 rate")," (public)"),(0,i.kt)("p",null,"Gets the exchange rate. I.e how much collateral to buy 1e18 asset.\nThis function is supposed to be invoked if needed because Oracle queries can be expensive."),(0,i.kt)("h3",{id:"_addtokenscontract-ierc20-token-uint256-share-uint256-total-bool-skim-internal"},(0,i.kt)("inlineCode",{parentName:"h3"},"_addTokens(contract IERC20 token, uint256 share, uint256 total, bool skim)")," (internal)"),(0,i.kt)("p",null,"Helper function to move tokens."),(0,i.kt)("h3",{id:"addcollateraladdress-to-bool-skim-uint256-share-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"addCollateral(address to, bool skim, uint256 share)")," (public)"),(0,i.kt)("p",null,"Adds ",(0,i.kt)("inlineCode",{parentName:"p"},"collateral")," from msg.sender to the account ",(0,i.kt)("inlineCode",{parentName:"p"},"to"),"."),(0,i.kt)("h3",{id:"_removecollateraladdress-to-uint256-share-internal"},(0,i.kt)("inlineCode",{parentName:"h3"},"_removeCollateral(address to, uint256 share)")," (internal)"),(0,i.kt)("p",null,"Concrete implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"removeCollateral"),"."),(0,i.kt)("h3",{id:"removecollateraladdress-to-uint256-share-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"removeCollateral(address to, uint256 share)")," (public)"),(0,i.kt)("p",null,"Removes ",(0,i.kt)("inlineCode",{parentName:"p"},"share")," amount of collateral and transfers it to ",(0,i.kt)("inlineCode",{parentName:"p"},"to"),"."),(0,i.kt)("h3",{id:"_addassetaddress-to-bool-skim-uint256-share--uint256-fraction-internal"},(0,i.kt)("inlineCode",{parentName:"h3"},"_addAsset(address to, bool skim, uint256 share) \u2192 uint256 fraction")," (internal)"),(0,i.kt)("p",null,"Concrete implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"addAsset"),"."),(0,i.kt)("h3",{id:"addassetaddress-to-bool-skim-uint256-share--uint256-fraction-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"addAsset(address to, bool skim, uint256 share) \u2192 uint256 fraction")," (public)"),(0,i.kt)("p",null,"Adds assets to the lending pair."),(0,i.kt)("h3",{id:"_removeassetaddress-to-uint256-fraction--uint256-share-internal"},(0,i.kt)("inlineCode",{parentName:"h3"},"_removeAsset(address to, uint256 fraction) \u2192 uint256 share")," (internal)"),(0,i.kt)("p",null,"Concrete implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"removeAsset"),"."),(0,i.kt)("h3",{id:"removeassetaddress-to-uint256-fraction--uint256-share-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"removeAsset(address to, uint256 fraction) \u2192 uint256 share")," (public)"),(0,i.kt)("p",null,"Removes an asset from msg.sender and transfers it to ",(0,i.kt)("inlineCode",{parentName:"p"},"to"),"."),(0,i.kt)("h3",{id:"_borrowaddress-to-uint256-amount--uint256-part-uint256-share-internal"},(0,i.kt)("inlineCode",{parentName:"h3"},"_borrow(address to, uint256 amount) \u2192 uint256 part, uint256 share")," (internal)"),(0,i.kt)("p",null,"Concrete implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"borrow"),"."),(0,i.kt)("h3",{id:"borrowaddress-to-uint256-amount--uint256-part-uint256-share-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"borrow(address to, uint256 amount) \u2192 uint256 part, uint256 share")," (public)"),(0,i.kt)("p",null,"Sender borrows ",(0,i.kt)("inlineCode",{parentName:"p"},"amount")," and transfers it to ",(0,i.kt)("inlineCode",{parentName:"p"},"to"),"."),(0,i.kt)("h3",{id:"_repayaddress-to-bool-skim-uint256-part--uint256-amount-internal"},(0,i.kt)("inlineCode",{parentName:"h3"},"_repay(address to, bool skim, uint256 part) \u2192 uint256 amount")," (internal)"),(0,i.kt)("p",null,"Concrete implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"repay"),"."),(0,i.kt)("h3",{id:"repayaddress-to-bool-skim-uint256-part--uint256-amount-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"repay(address to, bool skim, uint256 part) \u2192 uint256 amount")," (public)"),(0,i.kt)("p",null,"Repays a loan."),(0,i.kt)("h3",{id:"_numint256-innum-uint256-value1-uint256-value2--uint256-outnum-internal"},(0,i.kt)("inlineCode",{parentName:"h3"},"_num(int256 inNum, uint256 value1, uint256 value2) \u2192 uint256 outNum")," (internal)"),(0,i.kt)("p",null,"Helper function for choosing the correct value (",(0,i.kt)("inlineCode",{parentName:"p"},"value1")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"value2"),") depending on ",(0,i.kt)("inlineCode",{parentName:"p"},"inNum"),"."),(0,i.kt)("h3",{id:"_bentodepositbytes-data-uint256-value-uint256-value1-uint256-value2--uint256-uint256-internal"},(0,i.kt)("inlineCode",{parentName:"h3"},"_bentoDeposit(bytes data, uint256 value, uint256 value1, uint256 value2) \u2192 uint256, uint256")," (internal)"),(0,i.kt)("p",null,"Helper function for depositing into ",(0,i.kt)("inlineCode",{parentName:"p"},"bentoBox"),"."),(0,i.kt)("h3",{id:"_bentowithdrawbytes-data-uint256-value1-uint256-value2--uint256-uint256-internal"},(0,i.kt)("inlineCode",{parentName:"h3"},"_bentoWithdraw(bytes data, uint256 value1, uint256 value2) \u2192 uint256, uint256")," (internal)"),(0,i.kt)("p",null,"Helper function to withdraw from the ",(0,i.kt)("inlineCode",{parentName:"p"},"bentoBox"),"."),(0,i.kt)("h3",{id:"_calluint256-value-bytes-data-uint256-value1-uint256-value2--bytes-uint8-internal"},(0,i.kt)("inlineCode",{parentName:"h3"},"_call(uint256 value, bytes data, uint256 value1, uint256 value2) \u2192 bytes, uint8")," (internal)"),(0,i.kt)("p",null,"Helper function to perform a contract call and eventually extracting revert messages on failure.\nCalls to ",(0,i.kt)("inlineCode",{parentName:"p"},"bentoBox")," are not allowed for obvious security reasons.\nThis also means that calls made from this contract shall ",(0,i.kt)("em",{parentName:"p"},"not")," be trusted."),(0,i.kt)("h3",{id:"cookuint8-actions-uint256-values-bytes-datas--uint256-value1-uint256-value2-external"},(0,i.kt)("inlineCode",{parentName:"h3"},"cook(uint8[] actions, uint256[] values, bytes[] datas) \u2192 uint256 value1, uint256 value2")," (external)"),(0,i.kt)("p",null,"Executes a set of actions and allows composability (contract calls) to other contracts."),(0,i.kt)("h3",{id:"liquidateaddress-users-uint256-maxborrowparts-address-to-contract-iswapper-swapper-bool-open-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"liquidate(address[] users, uint256[] maxBorrowParts, address to, contract ISwapper swapper, bool open)")," (public)"),(0,i.kt)("p",null,"Handles the liquidation of users' balances, once the users' amount of collateral is too low."),(0,i.kt)("h3",{id:"withdrawfees-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"withdrawFees()")," (public)"),(0,i.kt)("p",null,"Withdraws the fees accumulated."),(0,i.kt)("h3",{id:"setswappercontract-iswapper-swapper-bool-enable-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"setSwapper(contract ISwapper swapper, bool enable)")," (public)"),(0,i.kt)("p",null,"Used to register and enable or disable swapper contracts used in closed liquidations.\nMasterContract Only Admin function."),(0,i.kt)("h3",{id:"setfeetoaddress-newfeeto-public"},(0,i.kt)("inlineCode",{parentName:"h3"},"setFeeTo(address newFeeTo)")," (public)"),(0,i.kt)("p",null,"Sets the beneficiary of fees accrued in liquidations.\nMasterContract Only Admin function."),(0,i.kt)("h3",{id:"logexchangerateuint256-rate"},(0,i.kt)("inlineCode",{parentName:"h3"},"LogExchangeRate(uint256 rate)")),(0,i.kt)("h3",{id:"logaccrueuint256-accruedamount-uint256-feefraction-uint64-rate-uint256-utilization"},(0,i.kt)("inlineCode",{parentName:"h3"},"LogAccrue(uint256 accruedAmount, uint256 feeFraction, uint64 rate, uint256 utilization)")),(0,i.kt)("h3",{id:"logaddcollateraladdress-from-address-to-uint256-share"},(0,i.kt)("inlineCode",{parentName:"h3"},"LogAddCollateral(address from, address to, uint256 share)")),(0,i.kt)("h3",{id:"logaddassetaddress-from-address-to-uint256-share-uint256-fraction"},(0,i.kt)("inlineCode",{parentName:"h3"},"LogAddAsset(address from, address to, uint256 share, uint256 fraction)")),(0,i.kt)("h3",{id:"logremovecollateraladdress-from-address-to-uint256-share"},(0,i.kt)("inlineCode",{parentName:"h3"},"LogRemoveCollateral(address from, address to, uint256 share)")),(0,i.kt)("h3",{id:"logremoveassetaddress-from-address-to-uint256-share-uint256-fraction"},(0,i.kt)("inlineCode",{parentName:"h3"},"LogRemoveAsset(address from, address to, uint256 share, uint256 fraction)")),(0,i.kt)("h3",{id:"logborrowaddress-from-address-to-uint256-amount-uint256-feeamount-uint256-part"},(0,i.kt)("inlineCode",{parentName:"h3"},"LogBorrow(address from, address to, uint256 amount, uint256 feeAmount, uint256 part)")),(0,i.kt)("h3",{id:"logrepayaddress-from-address-to-uint256-amount-uint256-part"},(0,i.kt)("inlineCode",{parentName:"h3"},"LogRepay(address from, address to, uint256 amount, uint256 part)")),(0,i.kt)("h3",{id:"logfeetoaddress-newfeeto"},(0,i.kt)("inlineCode",{parentName:"h3"},"LogFeeTo(address newFeeTo)")),(0,i.kt)("h3",{id:"logwithdrawfeesaddress-feeto-uint256-feesearnedfraction"},(0,i.kt)("inlineCode",{parentName:"h3"},"LogWithdrawFees(address feeTo, uint256 feesEarnedFraction)")),(0,i.kt)("h3",{id:"accrueinfo"},(0,i.kt)("inlineCode",{parentName:"h3"},"AccrueInfo")),(0,i.kt)("p",null,"uint64 interestPerSecond"),(0,i.kt)("p",null,"uint64 lastAccrued"),(0,i.kt)("p",null,"uint128 feesEarnedFraction"),(0,i.kt)("h3",{id:"cookstatus"},(0,i.kt)("inlineCode",{parentName:"h3"},"CookStatus")),(0,i.kt)("p",null,"bool needsSolvencyCheck"),(0,i.kt)("p",null,"bool hasAccrued"))}u.isMDXComponent=!0}}]);