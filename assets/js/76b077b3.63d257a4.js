"use strict";(self.webpackChunk_sushiswap_kitchen_docs=self.webpackChunk_sushiswap_kitchen_docs||[]).push([[6542],{3905:(e,n,a)=>{a.d(n,{Zo:()=>d,kt:()=>h});var t=a(67294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=t.createContext({}),l=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},d=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=l(a),h=o,u=m["".concat(c,".").concat(h)]||m[h]||p[h]||r;return a?t.createElement(u,s(s({ref:n},d),{},{components:a})):t.createElement(u,s({ref:n},d))}));function h(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=a.length,s=new Array(r);s[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<r;l++)s[l]=a[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},97238:(e,n,a)=>{a.d(n,{k:()=>d});var t=a(67294);const o="fileDownload_v5TW",r="fileDownloadIcon_Gxi7",s="fileDownloadTitle_Iu7+";var i;function c(){return c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e},c.apply(this,arguments)}const l=function(e){let{title:n,titleId:a,...o}=e;return t.createElement("svg",c({xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round",style:{height:"20.8px",width:"20.8px"},"aria-labelledby":a},o),n?t.createElement("title",{id:a},n):null,i||(i=t.createElement("path",{d:"M21.44 11.05l-9.19 9.19a6 6 0 01-8.49-8.49l9.19-9.19a4 4 0 015.66 5.66l-9.2 9.19a2 2 0 01-2.83-2.83l8.49-8.48"})))};class d extends t.Component{render(){const{link:e,title:n}=this.props;return t.createElement("a",{className:o,href:e,target:"_blank"},t.createElement(l,{className:r}),t.createElement("p",{className:s},n))}}},5872:(e,n,a)=>{a.r(n),a.d(n,{frontMatter:()=>r,contentTitle:()=>s,metadata:()=>i,toc:()=>c,default:()=>d});var t=a(87462),o=(a(67294),a(3905));a(97238);const r={sidebar_position:1},s="Quick start",i={unversionedId:"aggregation-protocol/guide/quick-start",id:"aggregation-protocol/guide/quick-start",isDocsHomePage:!1,title:"Quick start",description:"The guide below will provide an example of a swap on the Binance Smart Chain network, but you can do the same on any network supported by 1inch aggregation protocol",source:"@site/docs/aggregation-protocol/guide/quick-start.mdx",sourceDirName:"aggregation-protocol/guide",slug:"/aggregation-protocol/guide/quick-start",permalink:"/docs/aggregation-protocol/guide/quick-start",editUrl:"https://github.com/manifoldfinance/sushi-docs/edit/master/docs/aggregation-protocol/guide/quick-start.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Bentobox",permalink:"/docs/aggregation-protocol/introduction"},next:{title:"Legal",permalink:"/docs/aggregation-protocol/api/legal"}},c=[{value:"Check allowance",id:"check-allowance",children:[]},{value:"Allow exchange with 1inch router",id:"allow-exchange-with-1inch-router",children:[]},{value:"Do exchange!",id:"do-exchange",children:[]}],l={toc:c};function d(e){let{components:n,...a}=e;return(0,o.kt)("wrapper",(0,t.Z)({},l,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quick-start"},"Quick start"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The guide below will provide an example of a swap on the ",(0,o.kt)("inlineCode",{parentName:"p"},"Binance Smart Chain network"),", but you can do the same on any network supported by ",(0,o.kt)("inlineCode",{parentName:"p"},"1inch aggregation protocol")))),(0,o.kt)("p",null,"Let's assume that you want to exchange ",(0,o.kt)("strong",{parentName:"p"},"0.1")," ",(0,o.kt)("inlineCode",{parentName:"p"},"1INCH")," for ",(0,o.kt)("inlineCode",{parentName:"p"},"DAI")," at the best exchange rate on the market."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const swapParams = {\n    fromTokenAddress: '0x111111111117dc0aa78b770fa6a738034120c302', // 1INCH\n    toTokenAddress: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3', // DAI\n    amount: '100000000000000000',\n    fromAddress: 'YOUR_WALLET_ADDRESS',\n    slippage: 1,\n    disableEstimate: false,\n    allowPartialFill: false,\n};\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("inlineCode",{parentName:"p"},"amount: '100000000000000000'")," - we set this value, because ",(0,o.kt)("inlineCode",{parentName:"p"},"1INCH")," token has ",(0,o.kt)("strong",{parentName:"p"},"decimals = 18"),"\nTODO: explaining of decimals"))),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"About ",(0,o.kt)("inlineCode",{parentName:"p"},"slippage"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"disableEstimate"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"allowPartialFill")," and other params, please, read ",(0,o.kt)("a",{parentName:"p",href:"../api/swap-params"},"Swap params")))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"check-allowance"},"Check allowance"),(0,o.kt)("p",null,"Before making an asset exchange, we need to make sure that 1inch router has permission to exchange assets with your wallet.\nThis is part of the ",(0,o.kt)("inlineCode",{parentName:"p"},"ERC-20")," standard, you can read more about this HERE: TODO."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const Web3 = require('web3');\nconst fetch = require('node-fetch');\nconst yesno = require('yesno');\n\nconst chainId = 56;\nconst web3RpcUrl = 'https://bsc-dataseed.binance.org';\nconst walletAddress = '0x...xxx'; // Set your wallet address\nconst privateKey = '0x...xxx'; // Set private key of your wallet. Be careful! Don't share this key to anyone!\n\nconst swapParams = {\n    fromTokenAddress: '0x111111111117dc0aa78b770fa6a738034120c302', // 1INCH\n    toTokenAddress: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3', // DAI\n    amount: '100000000000000000',\n    fromAddress: walletAddress,\n    slippage: 1,\n    disableEstimate: false,\n    allowPartialFill: false,\n};\n\nconst broadcastApiUrl = 'https://tx-gateway.manifoldfinance.com/v1.1/' + chainId + '/broadcast';\nconst apiBaseUrl = 'https://api.manifoldfinance.com/v4.0/' + chainId;\nconst web3 = new Web3(web3RpcUrl);\n\nfunction apiRequestUrl(methodName, queryParams) {\n    return apiBaseUrl + methodName + '?' + (new URLSearchParams(queryParams)).toString();\n}\n\nfunction checkAllowance(tokenAddress, walletAddress) {\n    return fetch(apiRequestUrl('/approve/allowance', {tokenAddress, walletAddress}))\n        .then(res => res.json())\n        .then(res => res.allowance);\n}\n\nconst allowance = await checkAllowance(swapParams.fromTokenAddress, walletAddress);\n\nconsole.log('Allowance: ', allowance);\n")),(0,o.kt)("p",null,"If you have not previously exchanged this asset using ",(0,o.kt)("inlineCode",{parentName:"p"},"1inch aggregation protocol"),", then the following value will be displayed in the console:\n",(0,o.kt)("inlineCode",{parentName:"p"},"> Allowance: 0")),(0,o.kt)("p",null,"This means that at the moment ",(0,o.kt)("inlineCode",{parentName:"p"},"1inch router")," is allowed to exchange ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," tokens for your wallet."),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"allow-exchange-with-1inch-router"},"Allow exchange with 1inch router"),(0,o.kt)("p",null,"Ok, to allow ",(0,o.kt)("inlineCode",{parentName:"p"},"1inch router")," to exchange your tokens, we must create a transaction, indicating in it that the ",(0,o.kt)("inlineCode",{parentName:"p"},"1inch router")," is allowed to exchange a specified number of tokens:"),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"Be careful!")," Creating a transaction requires payment of a fee, the cost of the fee will be spent from your account."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const Web3 = require('web3');\nconst fetch = require('node-fetch');\nconst yesno = require('yesno');\n\nconst chainId = 56;\nconst web3RpcUrl = 'https://bsc-dataseed.binance.org';\nconst walletAddress = '0x...xxx'; // Set your wallet address\nconst privateKey = '0x...xxx'; // Set private key of your wallet. Be careful! Don't share this key to anyone!\n\nconst swapParams = {\n    fromTokenAddress: '0x111111111117dc0aa78b770fa6a738034120c302', // 1INCH\n    toTokenAddress: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3', // DAI\n    amount: '100000000000000000',\n    fromAddress: walletAddress,\n    slippage: 1,\n    disableEstimate: false,\n    allowPartialFill: false,\n};\n\nconst broadcastApiUrl = 'https://tx-gateway.manifoldfinance.com/v1.1/' + chainId + '/broadcast';\nconst apiBaseUrl = 'https://api.manifoldfinance.com/v4.0/' + chainId;\nconst web3 = new Web3(web3RpcUrl);\n\nfunction apiRequestUrl(methodName, queryParams) {\n    return apiBaseUrl + methodName + '?' + (new URLSearchParams(queryParams)).toString();\n}\n\nasync function broadCastRawTransaction(rawTransaction) {\n    return fetch(broadcastApiUrl, {\n        method: 'post',\n        body: JSON.stringify({rawTransaction}),\n        headers: {'Content-Type': 'application/json'}\n    })\n        .then(res => res.json())\n        .then(res => {\n            return res.transactionHash;\n        });\n}\n\nasync function signAndSendTransaction(transaction) {\n    const {rawTransaction} = await web3.eth.accounts.signTransaction(transaction, privateKey);\n\n    return await broadCastRawTransaction(rawTransaction);\n}\n\nasync function buildTxForApproveTradeWithRouter(tokenAddress, amount) {\n    const url = apiRequestUrl(\n        '/approve/transaction',\n        amount ? {tokenAddress, amount} : {tokenAddress}\n    );\n\n    const transaction = await fetch(url).then(res => res.json());\n\n    const gasLimit = await web3.eth.estimateGas({\n        ...transaction,\n        from: walletAddress\n    });\n\n    return {\n        ...transaction,\n        gas: gasLimit\n    };\n}\n\n// First, let's build the body of the transaction\nconst transactionForSign = await buildTxForApproveTradeWithRouter(swapParams.fromTokenAddress);\nconsole.log('Transaction for approve: ', transactionForSign);\n\nconst ok = await yesno({\n    question: 'Do you want to send a transaction to approve trade with 1inch router?'\n});\n\n// Before signing a transaction, make sure that all parameters in it are specified correctly\nif (!ok) {\n    return false;\n}\n\n// Send a transaction and get its hash\nconst approveTxHash = await signAndSendTransaction(transactionForSign);\n\nconsole.log('Approve tx hash: ', approveTxHash);\n")),(0,o.kt)("p",null,"After running this code in the console, you should see something like this:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"> Approve tx hash: 0xb87c133e203fe66b487e27ab0afde71842dc34ab97aca60c147c7662505312a6")),(0,o.kt)("p",null,"Having a hash of the transaction, you can monitor its execution using the blockchain explorer.\nFor the BSC network, we use a bscscan.com:\n",(0,o.kt)("a",{parentName:"p",href:"https://bscscan.com/tx/0xb87c133e203fe66b487e27ab0afde71842dc34ab97aca60c147c7662505312a6"},"https://bscscan.com/tx/0xb87c133e203fe66b487e27ab0afde71842dc34ab97aca60c147c7662505312a6")),(0,o.kt)("img",{"data-theme-mode":"light",src:"/img/aggregation-protocol/approve-tx-28632bffb938d72c00a57e17d00aea43-light.png"}),(0,o.kt)("img",{"data-theme-mode":"dark",src:"/img/aggregation-protocol/approve-tx-28632bffb938d72c00a57e17d00aea43-dark.png"}),(0,o.kt)("br",null),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Before proceeding, please make sure that the transaction has a status of ",(0,o.kt)("inlineCode",{parentName:"p"},"Success"),"!"))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"do-exchange"},"Do exchange!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const Web3 = require('web3');\nconst fetch = require('node-fetch');\nconst yesno = require('yesno');\n\nconst chainId = 56;\nconst web3RpcUrl = 'https://bsc-dataseed.binance.org';\nconst walletAddress = '0x...xxx';\nconst privateKey = '0x...xxx';\n\nconst swapParams = {\n    fromTokenAddress: '0x111111111117dc0aa78b770fa6a738034120c302', // 1INCH\n    toTokenAddress: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3', // DAI\n    amount: '100000000000000000',\n    fromAddress: walletAddress,\n    slippage: 1,\n    disableEstimate: false,\n    allowPartialFill: false,\n};\n\nconst broadcastApiUrl = 'https://tx-gateway.manifoldfinance.com/v1.1/' + chainId + '/broadcast';\nconst apiBaseUrl = 'https://api.manifoldfinance.com/v4.0/' + chainId;\nconst web3 = new Web3(web3RpcUrl);\n\nfunction apiRequestUrl(methodName, queryParams) {\n    return apiBaseUrl + methodName + '?' + (new URLSearchParams(queryParams)).toString();\n}\n\nasync function broadCastRawTransaction(rawTransaction) {\n    return fetch(broadcastApiUrl, {\n        method: 'post',\n        body: JSON.stringify({rawTransaction}),\n        headers: {'Content-Type': 'application/json'}\n    })\n    .then(res => res.json())\n    .then(res => {\n        return res.transactionHash;\n    });\n}\n\nasync function signAndSendTransaction(transaction) {\n    const {rawTransaction} = await web3.eth.accounts.signTransaction(transaction, privateKey);\n\n    return await broadCastRawTransaction(rawTransaction);\n}\n\nasync function buildTxForSwap(swapParams) {\n    const url = apiRequestUrl('/swap', swapParams);\n\n    return fetch(url).then(res => res.json()).then(res => res.tx);\n}\n\n// First, let's build the body of the transaction\nconst swapTransaction = await buildTxForSwap(swapParams);\nconsole.log('Transaction for swap: ', swapTransaction);\n\nconst ok = await yesno({\n    question: 'Do you want to send a transaction to exchange with 1inch router?'\n});\n\n// Before signing a transaction, make sure that all parameters in it are specified correctly\nif (!ok) {\n    return false;\n}\n\n// Send a transaction and get its hash\nconst swapTxHash = await signAndSendTransaction(swapTransaction);\nconsole.log('Swap transaction hash: ', swapTxHash);\n\n")),(0,o.kt)("p",null,"After running this code in the console, you should see something like this:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"> Approve tx hash: 0xe591e17cc2b33e6a244fb2a98deb83b4659f94cf867ef7730b614d1feaa7cf9d")),(0,o.kt)("p",null,"Let's check the result of the transaction on the explorer:\n",(0,o.kt)("a",{parentName:"p",href:"https://bscscan.com/tx/0xe591e17cc2b33e6a244fb2a98deb83b4659f94cf867ef7730b614d1feaa7cf9d"},"https://bscscan.com/tx/0xe591e17cc2b33e6a244fb2a98deb83b4659f94cf867ef7730b614d1feaa7cf9d")),(0,o.kt)("img",{"data-theme-mode":"light",src:"/img/aggregation-protocol/swaptx-light.png"}),(0,o.kt)("img",{"data-theme-mode":"dark",src:"/img/aggregation-protocol/swaptx-dark.png"}))}d.isMDXComponent=!0}}]);