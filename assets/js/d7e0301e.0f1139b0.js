"use strict";(self.webpackChunk_sushiswap_kitchen_docs=self.webpackChunk_sushiswap_kitchen_docs||[]).push([[9042],{3905:(e,t,n)=>{n.d(t,{Zo:()=>b,kt:()=>p});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),d=u(n),p=r,m=d["".concat(s,".").concat(p)]||d[p]||c[p]||i;return n?a.createElement(m,o(o({ref:t},b),{},{components:n})):a.createElement(m,o({ref:t},b))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2717:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>o,metadata:()=>l,toc:()=>s,default:()=>b});var a=n(7462),r=(n(7294),n(3905));const i={},o=void 0,l={unversionedId:"bentobox/bentobox/RebaseLibrary",id:"bentobox/bentobox/RebaseLibrary",isDocsHomePage:!1,title:"RebaseLibrary",description:"RebaseLibrary",source:"@site/docs/bentobox/bentobox/RebaseLibrary.md",sourceDirName:"bentobox/bentobox",slug:"/bentobox/bentobox/RebaseLibrary",permalink:"/docs/bentobox/bentobox/RebaseLibrary",editUrl:"https://github.com/manifoldfinance/sushi-doc-portal/edit/master/docs/bentobox/bentobox/RebaseLibrary.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PeggedOracleV1",permalink:"/docs/bentobox/bentobox/PeggedOracleV1"},next:{title:"Timelock",permalink:"/docs/bentobox/governance/Timelock"}},s=[{value:"<code>RebaseLibrary</code>",id:"rebaselibrary",children:[{value:"<code>toBase(struct Rebase total, uint256 elastic, bool roundUp) \u2192 uint256 base</code> (internal)",id:"tobasestruct-rebase-total-uint256-elastic-bool-roundup--uint256-base-internal",children:[]},{value:"<code>toElastic(struct Rebase total, uint256 base, bool roundUp) \u2192 uint256 elastic</code> (internal)",id:"toelasticstruct-rebase-total-uint256-base-bool-roundup--uint256-elastic-internal",children:[]},{value:"<code>add(struct Rebase total, uint256 elastic, bool roundUp) \u2192 struct Rebase, uint256 base</code> (internal)",id:"addstruct-rebase-total-uint256-elastic-bool-roundup--struct-rebase-uint256-base-internal",children:[]},{value:"<code>sub(struct Rebase total, uint256 base, bool roundUp) \u2192 struct Rebase, uint256 elastic</code> (internal)",id:"substruct-rebase-total-uint256-base-bool-roundup--struct-rebase-uint256-elastic-internal",children:[]},{value:"<code>add(struct Rebase total, uint256 elastic, uint256 base) \u2192 struct Rebase</code> (internal)",id:"addstruct-rebase-total-uint256-elastic-uint256-base--struct-rebase-internal",children:[]},{value:"<code>sub(struct Rebase total, uint256 elastic, uint256 base) \u2192 struct Rebase</code> (internal)",id:"substruct-rebase-total-uint256-elastic-uint256-base--struct-rebase-internal",children:[]}]}],u={toc:s};function b(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"rebaselibrary"},(0,r.kt)("inlineCode",{parentName:"h2"},"RebaseLibrary")),(0,r.kt)("p",null,"A rebasing library using overflow-/underflow-safe math."),(0,r.kt)("h3",{id:"tobasestruct-rebase-total-uint256-elastic-bool-roundup--uint256-base-internal"},(0,r.kt)("inlineCode",{parentName:"h3"},"toBase(struct Rebase total, uint256 elastic, bool roundUp) \u2192 uint256 base")," (internal)"),(0,r.kt)("p",null,"Calculates the base value in relationship to ",(0,r.kt)("inlineCode",{parentName:"p"},"elastic")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"total"),"."),(0,r.kt)("h3",{id:"toelasticstruct-rebase-total-uint256-base-bool-roundup--uint256-elastic-internal"},(0,r.kt)("inlineCode",{parentName:"h3"},"toElastic(struct Rebase total, uint256 base, bool roundUp) \u2192 uint256 elastic")," (internal)"),(0,r.kt)("p",null,"Calculates the elastic value in relationship to ",(0,r.kt)("inlineCode",{parentName:"p"},"base")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"total"),"."),(0,r.kt)("h3",{id:"addstruct-rebase-total-uint256-elastic-bool-roundup--struct-rebase-uint256-base-internal"},(0,r.kt)("inlineCode",{parentName:"h3"},"add(struct Rebase total, uint256 elastic, bool roundUp) \u2192 struct Rebase, uint256 base")," (internal)"),(0,r.kt)("p",null,"Add ",(0,r.kt)("inlineCode",{parentName:"p"},"elastic")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"total")," and doubles ",(0,r.kt)("inlineCode",{parentName:"p"},"total.base"),"."),(0,r.kt)("h3",{id:"substruct-rebase-total-uint256-base-bool-roundup--struct-rebase-uint256-elastic-internal"},(0,r.kt)("inlineCode",{parentName:"h3"},"sub(struct Rebase total, uint256 base, bool roundUp) \u2192 struct Rebase, uint256 elastic")," (internal)"),(0,r.kt)("p",null,"Sub ",(0,r.kt)("inlineCode",{parentName:"p"},"base")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"total")," and update ",(0,r.kt)("inlineCode",{parentName:"p"},"total.elastic"),"."),(0,r.kt)("h3",{id:"addstruct-rebase-total-uint256-elastic-uint256-base--struct-rebase-internal"},(0,r.kt)("inlineCode",{parentName:"h3"},"add(struct Rebase total, uint256 elastic, uint256 base) \u2192 struct Rebase")," (internal)"),(0,r.kt)("p",null,"Add ",(0,r.kt)("inlineCode",{parentName:"p"},"elastic")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"base")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"total"),"."),(0,r.kt)("h3",{id:"substruct-rebase-total-uint256-elastic-uint256-base--struct-rebase-internal"},(0,r.kt)("inlineCode",{parentName:"h3"},"sub(struct Rebase total, uint256 elastic, uint256 base) \u2192 struct Rebase")," (internal)"),(0,r.kt)("p",null,"Subtract ",(0,r.kt)("inlineCode",{parentName:"p"},"elastic")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"base")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"total"),"."))}b.isMDXComponent=!0}}]);