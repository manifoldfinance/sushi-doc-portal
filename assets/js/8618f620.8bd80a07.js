"use strict";(self.webpackChunk_sushiswap_kitchen_docs=self.webpackChunk_sushiswap_kitchen_docs||[]).push([[5608],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>p});var l=n(67294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,l,o=function(t,e){if(null==t)return{};var n,l,o={},r=Object.keys(t);for(l=0;l<r.length;l++)n=r[l],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(l=0;l<r.length;l++)n=r[l],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var i=l.createContext({}),s=function(t){var e=l.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},d=function(t){var e=s(t.components);return l.createElement(i.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},k=l.forwardRef((function(t,e){var n=t.components,o=t.mdxType,r=t.originalType,i=t.parentName,d=u(t,["components","mdxType","originalType","parentName"]),k=s(n),p=o,m=k["".concat(i,".").concat(p)]||k[p]||c[p]||r;return n?l.createElement(m,a(a({ref:e},d),{},{components:n})):l.createElement(m,a({ref:e},d))}));function p(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var r=n.length,a=new Array(r);a[0]=k;var u={};for(var i in e)hasOwnProperty.call(e,i)&&(u[i]=e[i]);u.originalType=t,u.mdxType="string"==typeof t?t:o,a[1]=u;for(var s=2;s<r;s++)a[s]=n[s];return l.createElement.apply(null,a)}return l.createElement.apply(null,n)}k.displayName="MDXCreateElement"},79080:(t,e,n)=>{n.r(e),n.d(e,{frontMatter:()=>r,contentTitle:()=>a,metadata:()=>u,toc:()=>i,default:()=>d});var l=n(87462),o=(n(67294),n(3905));const r={sidebar_position:5},a="Quote params",u={unversionedId:"aggregation-protocol/api/quote-params",id:"aggregation-protocol/api/quote-params",isDocsHomePage:!1,title:"Quote params",description:"Find the best quote to exchange via 1inch router: /api/quote",source:"@site/docs/aggregation-protocol/api/quote-params.mdx",sourceDirName:"aggregation-protocol/api",slug:"/aggregation-protocol/api/quote-params",permalink:"/docs/aggregation-protocol/api/quote-params",editUrl:"https://github.com/manifoldfinance/sushi-docs/edit/master/docs/aggregation-protocol/api/quote-params.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Swap params",permalink:"/docs/aggregation-protocol/api/swap-params"},next:{title:"AggregationRouterV4",permalink:"/docs/aggregation-protocol/smart-contract/AggregationRouterV4"}},i=[{value:"Find the best quote to exchange via 1inch router: /api/quote",id:"find-the-best-quote-to-exchange-via-1inch-router-apiquote",children:[{value:"Description of query parameters",id:"description-of-query-parameters",children:[]},{value:"Description of response parameters",id:"description-of-response-parameters",children:[]}]}],s={toc:i};function d(t){let{components:e,...n}=t;return(0,o.kt)("wrapper",(0,l.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quote-params"},"Quote params"),(0,o.kt)("h2",{id:"find-the-best-quote-to-exchange-via-1inch-router-apiquote"},"Find the best quote to exchange via 1inch router: ",(0,o.kt)("a",{parentName:"h2",href:"/docs/aggregation-protocol/api/swagger"},(0,o.kt)("inlineCode",{parentName:"a"},"/api/quote"))),(0,o.kt)("h3",{id:"description-of-query-parameters"},"Description of query parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("strong",null,"Parameter name")),(0,o.kt)("td",null,(0,o.kt)("strong",null,"Type")),(0,o.kt)("td",null,(0,o.kt)("strong",null,"Description")))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"fromTokenAddress*")),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"contract address of a token to sell",(0,o.kt)("br",null),"e.g.: ",(0,o.kt)("code",null,"0x6b175474e89094c44da98b954eedeac495271d0f"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"toTokenAddress*")),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"contract address of a token to buy",(0,o.kt)("br",null),"e.g.: ",(0,o.kt)("code",null,"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"amount*")),(0,o.kt)("td",null,"integer"),(0,o.kt)("td",null,"amount of a token to sell, set in minimal divisible units",(0,o.kt)("br",null),"e.g.:",(0,o.kt)("br",null),(0,o.kt)("code",null,"1.00 DAI")," set as ",(0,o.kt)("code",null,"1000000000000000000"),(0,o.kt)("br",null),(0,o.kt)("code",null,"51.03 USDC")," set as ",(0,o.kt)("code",null,"51030000"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"fee")),(0,o.kt)("td",null,"number"),(0,o.kt)("td",null,"this percentage of ",(0,o.kt)("code",null,"fromTokenAddress")," token amount will be sent to ",(0,o.kt)("code",null,"referrerAddress"),",",(0,o.kt)("br",null),"the rest will be used as input for a swap",(0,o.kt)("br",null),(0,o.kt)("code",null,"min: 0;")," ",(0,o.kt)("code",null,"max: 3;")," ",(0,o.kt)("code",null,"default: 0;"),(0,o.kt)("br",null),"example to set a fee to 1.5%: ",(0,o.kt)("code",null,"&fee=1.5"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"protocols")),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"specify liquidity protocols to use. If not set, all liquidity protocols will be used",(0,o.kt)("br",null),"e.g.: ",(0,o.kt)("code",null,"&protocols=WETH,CURVE,BALANCER,...,ZRX"),(0,o.kt)("br",null),(0,o.kt)("code",null,"default: all protocols can be used"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"gasPrice")),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"1inch takes in account gas expenses to determine exchange route. It is important to use the same gas price",(0,o.kt)("br",null),"on the quote and swap methods",(0,o.kt)("br",null),"gas price set in wei: ",(0,o.kt)("code",null,"12.5 GWEI")," set as ",(0,o.kt)("code",null,"12500000000"),(0,o.kt)("br",null),(0,o.kt)("code",null,'default: "fast" from the network'))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"complexityLevel")),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"maximum number of token-connectors to be used in a transaction. The more is used \u2014 the longer route estimation will take, the more complex route might be as a result. If not set, two token-connectors might be used",(0,o.kt)("br",null),(0,o.kt)("code",null,"min: 0;")," ",(0,o.kt)("code",null,"max: 3;")," ",(0,o.kt)("code",null,"default: 2"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"connectorTokens")),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"token-connectors can be specified via this parameter. The more is set \u2014 the longer route estimation will take. If not set, default token-connectors will be used. If token you want to exchange doesn't have a pool with one of the default token-connectors, this parameter will help find the route; should be the same for a quote and swap e.g.:",(0,o.kt)("br",null),(0,o.kt)("code",null,"&connectorTokens=0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE, 0x6b175474e89094c44da98b954eedeac495271d0f"),(0,o.kt)("br",null),(0,o.kt)("code",null,"default: list of dafault token-connectors"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"gasLimit")),(0,o.kt)("td",null,"integer"),(0,o.kt)("td",null,"maximum amount of gas for a swap;",(0,o.kt)("br",null),"should be the same for a quote and swap",(0,o.kt)("br",null),(0,o.kt)("code",null,"default: 11500000;")," ",(0,o.kt)("code",null,"max: 11500000;"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"gasLimit")),(0,o.kt)("td",null,"integer"),(0,o.kt)("td",null,"maximum amount of gas for a swap;",(0,o.kt)("br",null),"should be the same for a quote and swap",(0,o.kt)("br",null),(0,o.kt)("code",null,"default: 11500000;")," ",(0,o.kt)("code",null,"max: 11500000;"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"mainRouteParts")),(0,o.kt)("td",null,"integer"),(0,o.kt)("td",null,"limit maximum number of main route parts;",(0,o.kt)("br",null),"should be the same for a quote and swap",(0,o.kt)("br",null),(0,o.kt)("code",null,"default: 20;")," ",(0,o.kt)("code",null,"max: 50;"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"parts")),(0,o.kt)("td",null,"integer"),(0,o.kt)("td",null,"limit maximum number of parts each main route part can be split into; should be the same for a quote and swap",(0,o.kt)("br",null),(0,o.kt)("code",null,"default: 20;")," ",(0,o.kt)("code",null,"max: 100;"))))),(0,o.kt)("h3",{id:"description-of-response-parameters"},"Description of response parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("strong",null,"Parameter name")),(0,o.kt)("td",null,(0,o.kt)("strong",null,"Type")),(0,o.kt)("td",null,(0,o.kt)("strong",null,"Description")))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"fromToken")),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"parameters of a token to sell")),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"toToken")),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"parameters of a token to buy")),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"fromTokenAmount")),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"input amount of ",(0,o.kt)("code",null,"fromToken")," in minimal divisible units")),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"toTokenAmount")),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"result amount of ",(0,o.kt)("code",null,"toToken")," in minimal divisible units")),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"protocols")),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"route of the trade")),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"estimatedGas")),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"rough estimated amount of the gas limit for used protocols;",(0,o.kt)("br",null),"do not use ",(0,o.kt)("code",null,"estimatedGas")," from the quote method as the gas limit of a transaction")))))}d.isMDXComponent=!0}}]);