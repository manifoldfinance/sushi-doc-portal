"use strict";(self.webpackChunk_sushiswap_kitchen_docs=self.webpackChunk_sushiswap_kitchen_docs||[]).push([[4099],{3905:(e,t,l)=>{l.d(t,{Zo:()=>s,kt:()=>p});var c=l(7294);function r(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function a(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);t&&(c=c.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,c)}return l}function i(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?a(Object(l),!0).forEach((function(t){r(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):a(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function u(e,t){if(null==e)return{};var l,c,r=function(e,t){if(null==e)return{};var l,c,r={},a=Object.keys(e);for(c=0;c<a.length;c++)l=a[c],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(c=0;c<a.length;c++)l=a[c],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var n=c.createContext({}),o=function(e){var t=c.useContext(n),l=t;return e&&(l="function"==typeof e?e(t):i(i({},t),e)),l},s=function(e){var t=o(e.components);return c.createElement(n.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return c.createElement(c.Fragment,{},t)}},d=c.forwardRef((function(e,t){var l=e.components,r=e.mdxType,a=e.originalType,n=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),d=o(l),p=r,m=d["".concat(n,".").concat(p)]||d[p]||b[p]||a;return l?c.createElement(m,i(i({ref:t},s),{},{components:l})):c.createElement(m,i({ref:t},s))}));function p(e,t){var l=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=l.length,i=new Array(a);i[0]=d;var u={};for(var n in t)hasOwnProperty.call(t,n)&&(u[n]=t[n]);u.originalType=e,u.mdxType="string"==typeof e?e:r,i[1]=u;for(var o=2;o<a;o++)i[o]=l[o];return c.createElement.apply(null,i)}return c.createElement.apply(null,l)}d.displayName="MDXCreateElement"},2726:(e,t,l)=>{l.r(t),l.d(t,{frontMatter:()=>a,contentTitle:()=>i,metadata:()=>u,toc:()=>n,default:()=>s});var c=l(7462),r=(l(7294),l(3905));const a={},i=void 0,u={unversionedId:"bentobox/Multicall2",id:"bentobox/Multicall2",isDocsHomePage:!1,title:"Multicall2",description:"Multicall2",source:"@site/docs/bentobox/Multicall2.md",sourceDirName:"bentobox",slug:"/bentobox/Multicall2",permalink:"/docs/bentobox/Multicall2",editUrl:"https://github.com/manifoldfinance/sushi-doc-portal/edit/master/docs/bentobox/Multicall2.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MiniChefV2",permalink:"/docs/bentobox/MiniChefV2"},next:{title:"Ownable",permalink:"/docs/bentobox/Ownable"}},n=[{value:"<code>Multicall2</code>",id:"multicall2",children:[{value:"<code>aggregate(struct Multicall2.Call[] calls) \u2192 uint256 blockNumber, bytes[] returnData</code> (public)",id:"aggregatestruct-multicall2call-calls--uint256-blocknumber-bytes-returndata-public",children:[]},{value:"<code>blockAndAggregate(struct Multicall2.Call[] calls) \u2192 uint256 blockNumber, bytes32 blockHash, struct Multicall2.Result[] returnData</code> (public)",id:"blockandaggregatestruct-multicall2call-calls--uint256-blocknumber-bytes32-blockhash-struct-multicall2result-returndata-public",children:[]},{value:"<code>getBlockHash(uint256 blockNumber) \u2192 bytes32 blockHash</code> (public)",id:"getblockhashuint256-blocknumber--bytes32-blockhash-public",children:[]},{value:"<code>getBlockNumber() \u2192 uint256 blockNumber</code> (public)",id:"getblocknumber--uint256-blocknumber-public",children:[]},{value:"<code>getCurrentBlockCoinbase() \u2192 address coinbase</code> (public)",id:"getcurrentblockcoinbase--address-coinbase-public",children:[]},{value:"<code>getCurrentBlockDifficulty() \u2192 uint256 difficulty</code> (public)",id:"getcurrentblockdifficulty--uint256-difficulty-public",children:[]},{value:"<code>getCurrentBlockGasLimit() \u2192 uint256 gaslimit</code> (public)",id:"getcurrentblockgaslimit--uint256-gaslimit-public",children:[]},{value:"<code>getCurrentBlockTimestamp() \u2192 uint256 timestamp</code> (public)",id:"getcurrentblocktimestamp--uint256-timestamp-public",children:[]},{value:"<code>getEthBalance(address addr) \u2192 uint256 balance</code> (public)",id:"getethbalanceaddress-addr--uint256-balance-public",children:[]},{value:"<code>getLastBlockHash() \u2192 bytes32 blockHash</code> (public)",id:"getlastblockhash--bytes32-blockhash-public",children:[]},{value:"<code>tryAggregate(bool requireSuccess, struct Multicall2.Call[] calls) \u2192 struct Multicall2.Result[] returnData</code> (public)",id:"tryaggregatebool-requiresuccess-struct-multicall2call-calls--struct-multicall2result-returndata-public",children:[]},{value:"<code>tryBlockAndAggregate(bool requireSuccess, struct Multicall2.Call[] calls) \u2192 uint256 blockNumber, bytes32 blockHash, struct Multicall2.Result[] returnData</code> (public)",id:"tryblockandaggregatebool-requiresuccess-struct-multicall2call-calls--uint256-blocknumber-bytes32-blockhash-struct-multicall2result-returndata-public",children:[]},{value:"<code>Call</code>",id:"call",children:[]},{value:"<code>Result</code>",id:"result",children:[]}]}],o={toc:n};function s(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,c.Z)({},o,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"multicall2"},(0,r.kt)("inlineCode",{parentName:"h2"},"Multicall2")),(0,r.kt)("h3",{id:"aggregatestruct-multicall2call-calls--uint256-blocknumber-bytes-returndata-public"},(0,r.kt)("inlineCode",{parentName:"h3"},"aggregate(struct Multicall2.Call[] calls) \u2192 uint256 blockNumber, bytes[] returnData")," (public)"),(0,r.kt)("h3",{id:"blockandaggregatestruct-multicall2call-calls--uint256-blocknumber-bytes32-blockhash-struct-multicall2result-returndata-public"},(0,r.kt)("inlineCode",{parentName:"h3"},"blockAndAggregate(struct Multicall2.Call[] calls) \u2192 uint256 blockNumber, bytes32 blockHash, struct Multicall2.Result[] returnData")," (public)"),(0,r.kt)("h3",{id:"getblockhashuint256-blocknumber--bytes32-blockhash-public"},(0,r.kt)("inlineCode",{parentName:"h3"},"getBlockHash(uint256 blockNumber) \u2192 bytes32 blockHash")," (public)"),(0,r.kt)("h3",{id:"getblocknumber--uint256-blocknumber-public"},(0,r.kt)("inlineCode",{parentName:"h3"},"getBlockNumber() \u2192 uint256 blockNumber")," (public)"),(0,r.kt)("h3",{id:"getcurrentblockcoinbase--address-coinbase-public"},(0,r.kt)("inlineCode",{parentName:"h3"},"getCurrentBlockCoinbase() \u2192 address coinbase")," (public)"),(0,r.kt)("h3",{id:"getcurrentblockdifficulty--uint256-difficulty-public"},(0,r.kt)("inlineCode",{parentName:"h3"},"getCurrentBlockDifficulty() \u2192 uint256 difficulty")," (public)"),(0,r.kt)("h3",{id:"getcurrentblockgaslimit--uint256-gaslimit-public"},(0,r.kt)("inlineCode",{parentName:"h3"},"getCurrentBlockGasLimit() \u2192 uint256 gaslimit")," (public)"),(0,r.kt)("h3",{id:"getcurrentblocktimestamp--uint256-timestamp-public"},(0,r.kt)("inlineCode",{parentName:"h3"},"getCurrentBlockTimestamp() \u2192 uint256 timestamp")," (public)"),(0,r.kt)("h3",{id:"getethbalanceaddress-addr--uint256-balance-public"},(0,r.kt)("inlineCode",{parentName:"h3"},"getEthBalance(address addr) \u2192 uint256 balance")," (public)"),(0,r.kt)("h3",{id:"getlastblockhash--bytes32-blockhash-public"},(0,r.kt)("inlineCode",{parentName:"h3"},"getLastBlockHash() \u2192 bytes32 blockHash")," (public)"),(0,r.kt)("h3",{id:"tryaggregatebool-requiresuccess-struct-multicall2call-calls--struct-multicall2result-returndata-public"},(0,r.kt)("inlineCode",{parentName:"h3"},"tryAggregate(bool requireSuccess, struct Multicall2.Call[] calls) \u2192 struct Multicall2.Result[] returnData")," (public)"),(0,r.kt)("h3",{id:"tryblockandaggregatebool-requiresuccess-struct-multicall2call-calls--uint256-blocknumber-bytes32-blockhash-struct-multicall2result-returndata-public"},(0,r.kt)("inlineCode",{parentName:"h3"},"tryBlockAndAggregate(bool requireSuccess, struct Multicall2.Call[] calls) \u2192 uint256 blockNumber, bytes32 blockHash, struct Multicall2.Result[] returnData")," (public)"),(0,r.kt)("h3",{id:"call"},(0,r.kt)("inlineCode",{parentName:"h3"},"Call")),(0,r.kt)("p",null,"address target"),(0,r.kt)("p",null,"bytes callData"),(0,r.kt)("h3",{id:"result"},(0,r.kt)("inlineCode",{parentName:"h3"},"Result")),(0,r.kt)("p",null,"bool success"),(0,r.kt)("p",null,"bytes returnData"))}s.isMDXComponent=!0}}]);