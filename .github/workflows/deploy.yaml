name: Deploy

on:
  push:
    branches:
      - master
      - trunk
    paths-ignore:
      - .scripts/**
  # manual trigger
  workflow_dispatch:

jobs:

  bump_version:
    name: Bump Version
    needs: pre-run
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.github_tag_action.outputs.new_tag }}
      changelog: ${{ steps.github_tag_action.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Bump version and push tag
        id: github_tag_action
        uses: mathieudutour/github-tag-action@v4.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: master

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: bump_version
    if: ${{ needs.bump_version.outputs.new_tag != null }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Dependencies
        run: |
          yarn install
      - name: Build
        run: |
          yarn run build
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build # The folder the action should deploy.

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.bump_version.outputs.new_tag }}
          release_name: Release ${{ needs.bump_version.outputs.new_tag }}
          body: |
            New version ${{ needs.bump_version.outputs.new_tag }}

      - run: for f in `ls -d build/ | xargs`; do tar -cvzf ${f%/}.tar.gz $f; done
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            LICENSE.txt
            build.tar.gz
